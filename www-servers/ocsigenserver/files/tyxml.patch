commit 692707f73c14044942b6cd4b6b39b4754e20e78a
Author: Vasilis Papavasileiou <vasilis+git@besport.com>
Date:   Mon Aug 20 13:49:46 2018 +0200

    Replace tyxml.parser with xml-light

Index: ocsigenserver-2.9/.merlin
===================================================================
--- ocsigenserver-2.9.orig/.merlin
+++ ocsigenserver-2.9/.merlin
@@ -8,7 +8,8 @@ PKG cryptokit
 PKG netstring
 PKG netstring-pcre
 PKG ipaddr
-PKG tyxml tyxml.parser
+PKG tyxml
+PKG xml-light
 PKG camlzip
 PKG dynlink
 
Index: ocsigenserver-2.9/Makefile.options
===================================================================
--- ocsigenserver-2.9.orig/Makefile.options
+++ ocsigenserver-2.9/Makefile.options
@@ -40,7 +40,7 @@ SERVER_PACKAGE := lwt_ssl           \
                   findlib           \
 	          cryptokit         \
 		  tyxml             \
-	          tyxml.parser      \
+	          xml-light         \
                   dynlink           \
 
 INITPACKAGE := \"$(shell ${OCAMLFIND} query -p-format -recursive        \
Index: ocsigenserver-2.9/configure
===================================================================
--- ocsigenserver-2.9.orig/configure
+++ ocsigenserver-2.9/configure
@@ -424,6 +424,7 @@ check_library pcre "See: http://ocaml.in
 check_library cryptokit "See: http://pauillac.inria.fr/~xleroy/software.html#cryptokit"
 
 check_library tyxml "See: http://ocsigen.org/tyxml/"
+check_library xml-light "See: https://github.com/ncannasse/xml-light"
 
 # Check PostgreSQL
 case "$with_pgsql" in
Index: ocsigenserver-2.9/doc/manual-wiki/extend.wiki
===================================================================
--- ocsigenserver-2.9.orig/doc/manual-wiki/extend.wiki
+++ ocsigenserver-2.9/doc/manual-wiki/extend.wiki
@@ -4,79 +4,79 @@
 
 This page describes how to extend Ocsigen's server. This can be used to create new ways to generate pages (like Apache modules), to filter and change the requests (for example, rewriting of URLS), to extend the syntax of the configuration file.
 
-Remember to program your extensions in cooperative way using Lwt! 
+Remember to program your extensions in cooperative way using Lwt!
 
-These features have been introduced in Ocsigen 0.6.0. The extension mechanism will be improved in the future to fit better the needs of developers. As very extensions have been written for now, all this is somewhat experimental, and we look forward to feedback from developers about missing features or problems. 
+These features have been introduced in Ocsigen 0.6.0. The extension mechanism will be improved in the future to fit better the needs of developers. As very extensions have been written for now, all this is somewhat experimental, and we look forward to feedback from developers about missing features or problems.
 
 //Ocsigen is a collaborative project. Contributions are welcome. For example a proxy, a fastCGI module~ ...//
 
-===Filtering the requests or writing a module to generate pages 
+===Filtering the requests or writing a module to generate pages
 
-You can take as example the files {{{extensiontemplate.ml}}} or {{{staticmod.ml}}} from Ocsigen's distribution. 
+You can take as example the files {{{extensiontemplate.ml}}} or {{{staticmod.ml}}} from Ocsigen's distribution.
 
-The type of request is {{{Extensions.request_info}}} (have a look at it in the interface of the module {{{Extensions}}}). 
+The type of request is {{{Extensions.request_info}}} (have a look at it in the interface of the module {{{Extensions}}}).
 
-Each extensions loaded in the configuration file tries to handle the request and returns something of type {{{Extensions.answer}}}. If the page is not found by the extension ({{{Ext_not_found}}}), the following one will try to handle the request. If the page is found, the answer is {{{Ext_found r}}} where {{{r}}} has type {{{Extensions.result}}}. An extension can also modify the request before giving it to the next one (answer {{{Ext_continue_with of Extensions.request_info}}}). 
+Each extensions loaded in the configuration file tries to handle the request and returns something of type {{{Extensions.answer}}}. If the page is not found by the extension ({{{Ext_not_found}}}), the following one will try to handle the request. If the page is found, the answer is {{{Ext_found r}}} where {{{r}}} has type {{{Extensions.result}}}. An extension can also modify the request before giving it to the next one (answer {{{Ext_continue_with of Extensions.request_info}}}).
 
-To write such an extension, just write a cmo or cma, and use the function Extensions.register_extension to register you extension. This function takes four functions as parameters: 
-* a function that will be called for each virtual server, generating two functions: 
-**one that will be called to generate the pages (it has type {{{string option -> request_info -> answer Lwt.t}}}), where the {{{string option}}} is the encoding for characters possibly specified in the configuration file, 
-**one to parse the configuration file (see next section). 
-*a function that will be called at the beginning of the initialisation phase (if you need to initialize your extension, otherwise, put the identity). 
-*a function that will be called at the end of the initialisation phase of the server (if you need to do something here, otherwise the identity function). 
-*a function that will create an error message from the exceptions that may be raised during the initialisation phase, and raise again all other exceptions. That function has type {{{exn -> string}}}. Use the raise function if you don't need any. 
+To write such an extension, just write a cmo or cma, and use the function Extensions.register_extension to register you extension. This function takes four functions as parameters:
+* a function that will be called for each virtual server, generating two functions:
+**one that will be called to generate the pages (it has type {{{string option -> request_info -> answer Lwt.t}}}), where the {{{string option}}} is the encoding for characters possibly specified in the configuration file,
+**one to parse the configuration file (see next section).
+*a function that will be called at the beginning of the initialisation phase (if you need to initialize your extension, otherwise, put the identity).
+*a function that will be called at the end of the initialisation phase of the server (if you need to do something here, otherwise the identity function).
+*a function that will create an error message from the exceptions that may be raised during the initialisation phase, and raise again all other exceptions. That function has type {{{exn -> string}}}. Use the raise function if you don't need any.
 
-Example (from {{{staticmod.ml}}}): 
+Example (from {{{staticmod.ml}}}):
 
 {{{
 let _ = register_extension
-    ((fun _ -> 
-      let page_tree = 
-        try 
+    ((fun _ ->
+      let page_tree =
+        try
           find hostpattern
         with Not_found ->
           let n = new_pages_tree () in
           add hostpattern n;
           n
       in
-      (gen page_tree, 
+      (gen page_tree,
        parse_config page_tree)),
      start_init,
      end_init,
      raise)
 }}}
 
-While writing extensions, be very careful about site reloading. The initialisation phase will start again at each reloading, and the function you register will be called for each virtual at each reloading. 
+While writing extensions, be very careful about site reloading. The initialisation phase will start again at each reloading, and the function you register will be called for each virtual at each reloading.
 
-===Filtering the outputs 
+===Filtering the outputs
 It is also possible to create extensions that will filter the output of the server (for example to compress it). It is very similar to the previous one. Basically, use {{{Extensions.register_output_filter}}} instead of {{{Extensions.register_extension}}}. Have a look at the file {{{deflatemod.ml}}} for an example.
 
-===Extending the configuration file 
+===Extending the configuration file
 
-====Extending the configuration file for an extension 
+====Extending the configuration file for an extension
 
- The parsing of Ocsigen's configuration file is using a very basic xml parser (module {{{Simplexmlparser}}}). The function to be registered by the {{{Extensions.register_extension}}} function takes two parameters: the path of the web site and the xml subtree. 
+ The parsing of Ocsigen's configuration file is using a very basic xml parser (package {{{xml-light}}}). The function to be registered by the {{{Extensions.register_extension}}} function takes two parameters: the path of the web site and the xml subtree.
 
 {{{
 let parse_config path = function
-    Simplexmlparser.Element ("tag", attr, content) -> ...
+    Xml.Element ("tag", attr, content) -> ...
       (* Do what you want here *)
-  | Simplexmlparser.Element _ -> 
+  | Xml.Element _ ->
       raise (Extensions.Bad_config_tag_for_extension t)
   | _ -> raise (Extensions.Error_in_config_file "(my extension)")
 }}}
 
-The module {{{Parseconfig}}} defines functions to parse strings or sizes (in bytes, GB etc). 
+The module {{{Parseconfig}}} defines functions to parse strings or sizes (in bytes, GB etc).
 
-====Giving parameters to an extension 
+====Giving parameters to an extension
 
 //Warning: This is experimental. Please report your experience if you use it.//
 
-Extensions may take parameters in the configuration file. During the loading of the extension, the function {{{Extensions.get_config ()}}} returns the xml tree between {{{<extension>}}} and {{{</extension>}}} (or {{{<library>}}} and {{{</library>}}}). Write a parser for that tree. 
+Extensions may take parameters in the configuration file. During the loading of the extension, the function {{{Extensions.get_config ()}}} returns the xml tree between {{{<extension>}}} and {{{</extension>}}} (or {{{<library>}}} and {{{</library>}}}). Write a parser for that tree.
 
-===Catching the request before it is fully read 
+===Catching the request before it is fully read
 
-For some extensions of the Web server, it is necessary to catch the request before it has been fully read (especially before the body of the request has been read). For example it is the case if you want to write a (reverse) proxy. 
+For some extensions of the Web server, it is necessary to catch the request before it has been fully read (especially before the body of the request has been read). For example it is the case if you want to write a (reverse) proxy.
 
 //Warning: This is experimental. Please report your experience if you use it.//
 
@@ -94,10 +94,9 @@ It takes as parameter a function of type
 If you want to add your own commands for the server command pipe, do something like:
 
 {{{
-let () = 
+let () =
   Ocsigen_extensions.register_command_function ~prefix:"yourextensionname"
     (fun s c -> match c with
        | ["mycommand"] -> ...
        | _ -> raise Ocsigen_extensions.Unknown_command)
 }}}
-
Index: ocsigenserver-2.9/opam
===================================================================
--- ocsigenserver-2.9.orig/opam
+++ ocsigenserver-2.9/opam
@@ -57,7 +57,7 @@ depends: [
   "tyxml" {>= "4.0.0"}
   ("dbm" | "sqlite3" | "pgocaml")
   "ipaddr" {>= "2.1"}
-  "camlp4" # to force building tyxml.parser
+  "xml-light"
 ]
 depopts: "camlzip"
 conflicts: [
Index: ocsigenserver-2.9/src/extensions/Makefile
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/Makefile
+++ ocsigenserver-2.9/src/extensions/Makefile
@@ -9,7 +9,7 @@ PACKAGE  :=		\
 	lwt_log		\
 	netstring	\
 	netstring-pcre	\
-	tyxml.parser
+	xml-light
 
 LIBS     := -I ../baselib -I ../http -I ../server ${addprefix -package ,${PACKAGE}}
 OCAMLC   := $(OCAMLFIND) ocamlc ${BYTEDBG} ${THREAD}
Index: ocsigenserver-2.9/src/extensions/accesscontrol.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/accesscontrol.ml
+++ ocsigenserver-2.9/src/extensions/accesscontrol.ml
@@ -32,7 +32,6 @@ open Ocsigen_lib
 open Printf
 open Lwt
 open Ocsigen_extensions
-open Simplexmlparser
 open Ocsigen_http_frame
 
 
@@ -43,7 +42,7 @@ let section = Lwt_log.Section.make "ocsi
 
 let rec parse_condition = function
 
-    | Element ("ip", ["value", s], []) ->
+    | Xml.Element ("ip", ["value", s], []) ->
         let prefix =
           try
             Ipaddr.Prefix.of_string_exn s
@@ -67,9 +66,9 @@ let rec parse_condition = function
                "IP: %a does not match %s"
                (fun () -> Ocsigen_request_info.remote_ip) ri s;
            r)
-    | Element ("ip" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("ip" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("port", ["value", s], []) ->
+    | Xml.Element ("port", ["value", s], []) ->
         let port =
           try
             int_of_string s
@@ -87,9 +86,9 @@ let rec parse_condition = function
                (fun () ri -> string_of_int (Ocsigen_request_info.server_port ri))
                ri port;
            r)
-    | Element ("port" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("port" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("ssl", [], []) ->
+    | Xml.Element ("ssl", [], []) ->
         (fun ri ->
            let r = Ocsigen_request_info.ssl ri in
            if r then
@@ -97,9 +96,9 @@ let rec parse_condition = function
            else
              Lwt_log.ign_info ~section "SSL: not accepted";
            r)
-    | Element ("ssl" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("ssl" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("header", ["name", name; "regexp", reg], []) ->
+    | Xml.Element ("header", ["name", name; "regexp", reg], []) ->
         let regexp =
           try
             Netstring_pcre.regexp ("^"^reg^"$")
@@ -126,9 +125,9 @@ let rec parse_condition = function
            if not r
            then Lwt_log.ign_info_f "HEADER: header %s does not match %S" name reg;
            r)
-    | Element ("header" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("header" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("method", ["value", s], []) ->
+    | Xml.Element ("method", ["value", s], []) ->
         let meth =
           try
             Framepp.method_of_string s
@@ -146,9 +145,9 @@ let rec parse_condition = function
                "METHOD: %a does not match %s"
               (fun () ri -> Framepp.string_of_method (Ocsigen_request_info.meth ri)) ri s;
            r)
-    | Element ("method" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("method" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("protocol", ["value", s], []) ->
+    | Xml.Element ("protocol", ["value", s], []) ->
         let pr =
           try
             Framepp.proto_of_string s
@@ -166,9 +165,9 @@ let rec parse_condition = function
                "PROTOCOL: %a does not match %s"
                (fun () ri -> Framepp.string_of_proto (Ocsigen_request_info.protocol ri)) ri s;
            r)
-    | Element ("protocol" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("protocol" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("path", ["regexp", s], []) ->
+    | Xml.Element ("path", ["regexp", s], []) ->
         let regexp =
           try
             Netstring_pcre.regexp ("^"^s^"$")
@@ -189,22 +188,22 @@ let rec parse_condition = function
                "PATH: \"%a\" does not match %S"
                (fun () ri -> Ocsigen_request_info.sub_path_string ri) ri s;
            r)
-    | Element ("path" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("path" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("and", [], sub) ->
+    | Xml.Element ("and", [], sub) ->
         let sub = List.map parse_condition sub in
         (fun ri -> List.for_all (fun cond -> cond ri) sub)
-    | Element ("and" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("and" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("or", [], sub) ->
+    | Xml.Element ("or", [], sub) ->
         let sub = List.map parse_condition sub in
         (fun ri -> List.exists (fun cond -> cond ri) sub)
-    | Element ("or" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("or" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-    | Element ("not", [], [sub]) ->
+    | Xml.Element ("not", [], [sub]) ->
         let sub = parse_condition sub in
         (fun ri -> not (sub ri))
-    | Element ("not" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+    | Xml.Element ("not" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
     | _ ->
         badconfig "Bad syntax for condition"
@@ -217,17 +216,17 @@ let comma_space_regexp = Netstring_pcre.
 
 let parse_config parse_fun = function
 
-  | Element ("if", [], sub) ->
+  | Xml.Element ("if", [], sub) ->
       let (condition, sub) = match sub with
         | cond::q -> (parse_condition cond, q)
         | _ -> badconfig "Bad condition in <if>"
       in
       let (ithen, sub) = match sub with
-          | Element("then", [], ithen)::q -> (parse_fun ithen, q)
+          | Xml.Element("then", [], ithen)::q -> (parse_fun ithen, q)
           | _ -> badconfig "Bad <then> branch in <if>"
       in
       let (ielse, sub) = match sub with
-          | Element ("else", [], ielse)::([] as q) -> (parse_fun ielse, q)
+          | Xml.Element ("else", [], ielse)::([] as q) -> (parse_fun ielse, q)
           | [] -> (parse_fun [], [])
           | _ -> badconfig "Bad <else> branch in <if>"
       in
@@ -243,17 +242,17 @@ let parse_config parse_fun = function
                  Lwt_log.ign_info ~section "COND: going into <else> branch, if any";
                  Ocsigen_extensions.Ext_sub_result ielse
                end))
-  | Element ("if" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("if" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
 
-  | Element ("notfound", [], []) ->
+  | Xml.Element ("notfound", [], []) ->
       (fun rs ->
         Lwt_log.ign_info ~section "NOT_FOUND: taking in charge 404";
          Lwt.return (Ocsigen_extensions.Ext_stop_all
                        (Ocsigen_cookies.Cookies.empty, 404)))
-  | Element ("notfound" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("notfound" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("nextsite", [], []) ->
+  | Xml.Element ("nextsite", [], []) ->
       (function
          | Ocsigen_extensions.Req_found (_, r) ->
              Lwt.return (Ocsigen_extensions.Ext_found_stop
@@ -262,7 +261,7 @@ let parse_config parse_fun = function
              Lwt.return (Ocsigen_extensions.Ext_stop_site
                            (Ocsigen_cookies.Cookies.empty, 404)))
 
-  | Element ("nexthost", [], []) ->
+  | Xml.Element ("nexthost", [], []) ->
       (function
          | Ocsigen_extensions.Req_found (_, r) ->
              Lwt.return (Ocsigen_extensions.Ext_found_stop
@@ -270,9 +269,9 @@ let parse_config parse_fun = function
          | Ocsigen_extensions.Req_not_found (err, ri) ->
              Lwt.return (Ocsigen_extensions.Ext_stop_host
                            (Ocsigen_cookies.Cookies.empty, 404)))
-  | Element ("nextsite" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("nextsite" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("stop", [], []) ->
+  | Xml.Element ("stop", [], []) ->
       (function
          | Ocsigen_extensions.Req_found (_, r) ->
              Lwt.return (Ocsigen_extensions.Ext_found_stop
@@ -280,25 +279,25 @@ let parse_config parse_fun = function
          | Ocsigen_extensions.Req_not_found (err, ri) ->
              Lwt.return (Ocsigen_extensions.Ext_stop_all
                            (Ocsigen_cookies.Cookies.empty, 404)))
-  | Element ("stop" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("stop" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("forbidden", [], []) ->
+  | Xml.Element ("forbidden", [], []) ->
     (fun rs ->
        Lwt_log.ign_info ~section "FORBIDDEN: taking in charge 403";
          Lwt.return (Ocsigen_extensions.Ext_stop_all
                        (Ocsigen_cookies.Cookies.empty, 403)))
-  | Element ("forbidden" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("forbidden" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("iffound", [], sub) ->
+  | Xml.Element ("iffound", [], sub) ->
       let ext = parse_fun sub in
       (function
          | Ocsigen_extensions.Req_found (_, _) ->
              Lwt.return (Ext_sub_result ext)
          | Ocsigen_extensions.Req_not_found (err, ri) ->
              Lwt.return (Ocsigen_extensions.Ext_next err))
-  | Element ("iffound" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("iffound" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("ifnotfound", [], sub) ->
+  | Xml.Element ("ifnotfound", [], sub) ->
       let ext = parse_fun sub in
       (function
          | Ocsigen_extensions.Req_found (_, r) ->
@@ -306,7 +305,7 @@ let parse_config parse_fun = function
                            (fun () -> Lwt.return r))
          | Ocsigen_extensions.Req_not_found (err, ri) ->
              Lwt.return (Ext_sub_result ext))
-  | Element ("ifnotfound", [("code", s)], sub) ->
+  | Xml.Element ("ifnotfound", [("code", s)], sub) ->
       let ext = parse_fun sub in
       let r = Netstring_pcre.regexp ("^"^s^"$") in
       (function
@@ -318,9 +317,9 @@ let parse_config parse_fun = function
                Lwt.return (Ext_sub_result ext)
              else
                Lwt.return (Ocsigen_extensions.Ext_next err))
-  | Element ("ifnotfound" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("ifnotfound" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("allow-forward-for", param, _) ->
+  | Xml.Element ("allow-forward-for", param, _) ->
     let apply request code =
       Lwt_log.ign_info ~section "Allowed proxy";
       let request =
@@ -372,7 +371,7 @@ let parse_config parse_fun = function
         apply request (Ocsigen_http_frame.Result.code resp)
       | Ocsigen_extensions.Req_not_found (code, request) -> apply request code)
 
-  | Element ("allow-forward-proto", _, _) ->
+  | Xml.Element ("allow-forward-proto", _, _) ->
     let apply request code =
       Lwt_log.ign_info ~section "Allowed proxy for ssl";
       let request =
@@ -406,7 +405,7 @@ let parse_config parse_fun = function
       | Ocsigen_extensions.Req_found (request, resp) ->
         apply request (Ocsigen_http_frame.Result.code resp)
       | Ocsigen_extensions.Req_not_found (code, request) -> apply request code)
-  | Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
+  | Xml.Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
   | _ -> badconfig "(accesscontrol extension) Bad data"
 
 
Index: ocsigenserver-2.9/src/extensions/accesscontrol.mli
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/accesscontrol.mli
+++ ocsigenserver-2.9/src/extensions/accesscontrol.mli
@@ -20,4 +20,4 @@
 
 
 val parse_condition :
-  Simplexmlparser.xml -> Ocsigen_extensions.request_info -> bool
+  Xml.xml -> Ocsigen_extensions.request_info -> bool
Index: ocsigenserver-2.9/src/extensions/authbasic.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/authbasic.ml
+++ ocsigenserver-2.9/src/extensions/authbasic.ml
@@ -55,7 +55,7 @@ let register_basic_authentication_method
 (* Basic authentication with a predefined login/password (example) *)
 
 let _ =
-  let open Simplexmlparser in
+  let open Xml in
   register_basic_authentication_method
     (function
       | Element ("plain", ["login", login; "password", password], _) ->
@@ -133,7 +133,7 @@ let parse_config element =
           ]
           ~other_elements:(fun name attrs content ->
             rest_ref :=
-              Simplexmlparser.Element (name, attrs, content) :: !rest_ref)
+              Xml.Element (name, attrs, content) :: !rest_ref)
       ()]
       element
   );
Index: ocsigenserver-2.9/src/extensions/authbasic.mli
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/authbasic.mli
+++ ocsigenserver-2.9/src/extensions/authbasic.mli
@@ -34,7 +34,7 @@
 
 
 val register_basic_authentication_method :
-  (Simplexmlparser.xml -> string -> string -> bool Lwt.t) -> unit
+  (Xml.xml -> string -> string -> bool Lwt.t) -> unit
 (** This function registers an authentication plugin: it adds a new
     parser to the list of available authentication schemes.
 
@@ -55,7 +55,7 @@ val register_basic_authentication_method
 
 
 val get_basic_authentication_method :
-  Simplexmlparser.xml -> string -> string -> bool Lwt.t
+  Xml.xml -> string -> string -> bool Lwt.t
 (** This function combines all the parsers registered with
     [register_basic_authentication_method]. It might be useful for
     other extensions. Not for the casual user. *)
Index: ocsigenserver-2.9/src/extensions/cgimod.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/cgimod.ml
+++ ocsigenserver-2.9/src/extensions/cgimod.ml
@@ -28,7 +28,6 @@ open Ocsigen_lib
 
 open Lwt
 open Ocsigen_extensions
-open Simplexmlparser
 open Ocsigen_http_frame
 open Ocsigen_http_com
 open Ocsigen_senders
@@ -456,7 +455,7 @@ let get_content str =
 (*****************************************************************************)
 let rec parse_global_config = function
   | [] -> ()
-  | (Element ("cgitimeout", [("value", s)], []))::[] ->
+  | (Xml.Element ("cgitimeout", [("value", s)], []))::[] ->
     cgitimeout := int_of_string s
   | _ -> raise (Error_in_config_file
                   ("Unexpected content inside cgimod config"))
@@ -573,7 +572,7 @@ let gen reg = function
 
 let rec set_env = function
   | [] -> []
-  | (Element("setenv", [("var",vr);("val",vl)], []))::l ->
+  | (Xml.Element("setenv", [("var",vr);("val",vl)], []))::l ->
     if List.mem vr environment
     then (Lwt_log.ign_info_f ~section "Variable no set %s" vr;
           set_env l)
@@ -581,7 +580,7 @@ let rec set_env = function
   | _ :: l -> raise (Error_in_config_file "Bad config tag for <cgi>")
 
 let parse_config _ path _ _ = function
-  | Element ("cgi", atts, l) ->
+  | Xml.Element ("cgi", atts, l) ->
     let good_root r =
       Regexp.quote (string_conform2 r)
     in
Index: ocsigenserver-2.9/src/extensions/deflatemod.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/deflatemod.ml
+++ ocsigenserver-2.9/src/extensions/deflatemod.ml
@@ -26,7 +26,6 @@
 open Ocsigen_lib
 open Lwt
 open Ocsigen_extensions
-open Simplexmlparser
 open Ocsigen_headers
 
 let section = Lwt_log.Section.make "ocsigen:ext:deflate"
@@ -303,13 +302,13 @@ let filter choice_list = function
 
 let rec parse_global_config = function
   | [] -> ()
-  | (Element ("compress", [("level", l)], []))::ll ->
+  | (Xml.Element ("compress", [("level", l)], []))::ll ->
     let l = try int_of_string l
       with Failure _ -> raise (Error_in_config_file
                                  "Compress level should be an integer between 0 and 9") in
     compress_level := if (l <= 9 && l >= 0) then l else 6 ;
     parse_global_config ll
-  | (Element ("buffer", [("size", s)], []))::ll ->
+  | (Xml.Element ("buffer", [("size", s)], []))::ll ->
     let s = (try int_of_string s
              with Failure _ -> raise (Error_in_config_file
                                         "Buffer size should be a positive integer")) in
@@ -317,7 +316,7 @@ let rec parse_global_config = function
     parse_global_config ll
   (* TODO: Pas de filtre global pour l'instant
    * le nom de balise contenttype est mauvais, au passage
-     | (Element ("contenttype", [("compress", b)], choices))::ll ->
+     | (Xml.Element ("contenttype", [("compress", b)], choices))::ll ->
        let l = (try parse_filter choices
                with Not_found -> raise (Error_in_config_file
                     "Can't parse mime-type content")) in
Index: ocsigenserver-2.9/src/extensions/extendconfiguration.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/extendconfiguration.ml
+++ ocsigenserver-2.9/src/extensions/extendconfiguration.ml
@@ -19,7 +19,6 @@
 *)
 open Lwt
 open Ocsigen_extensions
-open Simplexmlparser
 open Ocsigen_charset_mime
 
 
@@ -50,11 +49,11 @@ let gather_do_not_serve_files tag =
         do_not_serve_extensions = extensions
       }
 
-    | Element ("regexp", ["regexp", f], []) :: q ->
+    | Xml.Element ("regexp", ["regexp", f], []) :: q ->
       aux (f :: regexps, files, extensions) q
-    | Element ("file", ["file", f], []) :: q ->
+    | Xml.Element ("file", ["file", f], []) :: q ->
       aux (regexps, f :: files, extensions) q
-    | Element ("extension", ["ext", f], []) :: q ->
+    | Xml.Element ("extension", ["ext", f], []) :: q ->
       aux (regexps, files, f :: extensions) q
 
     | _ :: q -> bad_config ("invalid options in tag " ^ tag)
@@ -78,14 +77,14 @@ let check_regexp_list =
 
 
 let update_config usermode = function
-  | Element ("listdirs", ["value", "true"], []) ->
+  | Xml.Element ("listdirs", ["value", "true"], []) ->
     gen (fun config -> { config with list_directory_content = true })
-  | Element ("listdirs", ["value", "false"], []) ->
+  | Xml.Element ("listdirs", ["value", "false"], []) ->
     gen (fun config -> { config with list_directory_content = false })
-  | Element ("listdirs" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("listdirs" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
 
-  | Element ("followsymlinks", ["value", s], []) ->
+  | Xml.Element ("followsymlinks", ["value", s], []) ->
     let v = match s with
       | "never" -> DoNotFollowSymlinks
       | "always" ->
@@ -100,17 +99,17 @@ let update_config usermode = function
         bad_config ("Wrong value \""^s^"\" for option \"followsymlinks\"")
     in
     gen (fun config -> { config with follow_symlinks = v })
-  | Element ("followsymlinks" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("followsymlinks" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
 
-  | Element ("charset", attrs, exts) ->
+  | Xml.Element ("charset", attrs, exts) ->
     let rec aux charset_assoc = function
       | [] -> charset_assoc
-      | Element ("extension", ["ext", extension; "value", charset], []) :: q ->
+      | Xml.Element ("extension", ["ext", extension; "value", charset], []) :: q ->
         aux (update_charset_ext charset_assoc extension charset) q
-      | Element ("file", ["file", file; "value", charset], []) :: q ->
+      | Xml.Element ("file", ["file", file; "value", charset], []) :: q ->
         aux (update_charset_file charset_assoc file charset) q
-      | Element ("regexp", ["regexp", regexp; "value", charset], []) :: q ->
+      | Xml.Element ("regexp", ["regexp", regexp; "value", charset], []) :: q ->
         (try
            let r = Netstring_pcre.regexp regexp in
            aux (update_charset_regexp charset_assoc r charset) q
@@ -129,14 +128,14 @@ let update_config usermode = function
         { config with charset_assoc = aux config.charset_assoc exts })
 
 
-  | Element ("contenttype", attrs, exts) ->
+  | Xml.Element ("contenttype", attrs, exts) ->
     let rec aux mime_assoc = function
       | [] -> mime_assoc
-      | Element ("extension", ["ext", extension; "value", mime], []) :: q ->
+      | Xml.Element ("extension", ["ext", extension; "value", mime], []) :: q ->
         aux (update_mime_ext mime_assoc extension mime) q
-      | Element ("file", ["file", file; "value", mime], []) :: q ->
+      | Xml.Element ("file", ["file", file; "value", mime], []) :: q ->
         aux (update_mime_file mime_assoc file mime) q
-      | Element ("regexp", ["regexp", regexp; "value", mime], []) :: q ->
+      | Xml.Element ("regexp", ["regexp", regexp; "value", mime], []) :: q ->
         (try
            let r = Netstring_pcre.regexp regexp in
            aux (update_mime_regexp mime_assoc r mime) q
@@ -155,10 +154,10 @@ let update_config usermode = function
         { config with mime_assoc = aux config.mime_assoc exts })
 
 
-  | Element ("defaultindex", [], l) ->
+  | Xml.Element ("defaultindex", [], l) ->
     let rec aux indexes = function
       | [] -> List.rev indexes
-      | Element ("index", [], [PCData f]) :: q ->
+      | Xml.Element ("index", [], [PCData f]) :: q ->
         aux (f :: indexes) q
       | _ :: q -> bad_config "subtags must be of the form \
                               <index>...</index> \
@@ -166,9 +165,9 @@ let update_config usermode = function
     in
     gen (fun config ->
         { config with default_directory_index = aux [] l })
-  | Element ("defaultindex" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("defaultindex" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("hidefile", [], l) ->
+  | Xml.Element ("hidefile", [], l) ->
     let do_not_serve = gather_do_not_serve_files "hidefile" l in
     (try
        check_regexp_list do_not_serve.do_not_serve_regexps;
@@ -177,9 +176,9 @@ let update_config usermode = function
                            join_do_not_serve do_not_serve config.do_not_serve_404 })
      with Bad_regexp r ->
        badconfig "Invalid regexp %s in %s" r "hidefile")
-  | Element ("hidefile" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("hidefile" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("forbidfile", [], l) ->
+  | Xml.Element ("forbidfile", [], l) ->
     let do_not_serve = gather_do_not_serve_files "forbidfile" l in
     (try
        check_regexp_list do_not_serve.do_not_serve_regexps;
@@ -188,28 +187,28 @@ let update_config usermode = function
                            join_do_not_serve do_not_serve config.do_not_serve_403 })
      with Bad_regexp r ->
        badconfig "Invalid regexp %s in %s" r "forbidfile")
-  | Element ("forbidfile" as s, _, _) -> badconfig "Bad syntax for tag %s" s
+  | Xml.Element ("forbidfile" as s, _, _) -> badconfig "Bad syntax for tag %s" s
 
-  | Element ("uploaddir", [], [PCData s]) ->
+  | Xml.Element ("uploaddir", [], [PCData s]) ->
     if s = "" then
       gen (fun config -> { config with uploaddir = None })
     else
       gen (fun config -> { config with uploaddir = Some s })
-  | Element ("uploaddir" as s, _, _) ->
+  | Xml.Element ("uploaddir" as s, _, _) ->
     badconfig "Bad syntax for tag %s" s
 
-  | Element ("maxuploadfilesize" as tag, [], [PCData s]) ->
+  | Xml.Element ("maxuploadfilesize" as tag, [], [PCData s]) ->
     let s =
       try Ocsigen_parseconfig.parse_size_tag "uploaddir" s
       with Ocsigen_config.Config_file_error _ ->
         badconfig "Bad syntax for tag %s" tag
     in
     gen (fun config -> { config with maxuploadfilesize = s })
-  | Element ("maxuploadfilesize" as s, _, _) ->
+  | Xml.Element ("maxuploadfilesize" as s, _, _) ->
     badconfig "Bad syntax for tag %s" s
 
 
-  | Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
+  | Xml.Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
   | _ ->
     raise (Error_in_config_file "Unexpected data in config file")
 
Index: ocsigenserver-2.9/src/extensions/extensiontemplate.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/extensiontemplate.ml
+++ ocsigenserver-2.9/src/extensions/extensiontemplate.ml
@@ -41,9 +41,6 @@
 
 open Lwt
 open Ocsigen_extensions
-open Simplexmlparser
-
-
 
 (*****************************************************************************)
 (** Extensions may take some options from the config file.
@@ -58,7 +55,7 @@ open Simplexmlparser
 
 let rec parse_global_config = function
   | [] -> ()
-  | (Element ("myoption", [("myattr", s)], []))::ll -> ()
+  | (Xml.Element ("myoption", [("myattr", s)], []))::ll -> ()
   | _ -> raise (Error_in_config_file
                   ("Unexpected content inside extensiontemplate config"))
 
@@ -126,8 +123,8 @@ let gen = function
 *)
 
 let parse_config path _ parse_site = function
-  | Element ("extensiontemplate", atts, []) -> gen
-  | Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
+  | Xml.Element ("extensiontemplate", atts, []) -> gen
+  | Xml.Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
   | _ ->
     raise (Error_in_config_file "Unexpected data in config file")
 
@@ -173,7 +170,7 @@ let exn_handler = raise
      {- raise [Bad_config_tag_for_extension] if it does not recognize that tag}
      {- return something of type [extension] (filter or page generator)}}
 *)
-let site_creator 
+let site_creator
     (hostpattern : Ocsigen_extensions.virtual_hosts)
     (config_info : Ocsigen_extensions.config_info)
   = parse_config
@@ -207,4 +204,3 @@ let () = register_extension
 
     ~begin_init ~end_init ~exn_handler
     ()
-
Index: ocsigenserver-2.9/src/extensions/ocsipersist-dbm/Makefile
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/ocsipersist-dbm/Makefile
+++ ocsigenserver-2.9/src/extensions/ocsipersist-dbm/Makefile
@@ -1,5 +1,9 @@
 include ../../../Makefile.config
 
+PACKAGE  := lwt.unix lwt_log xml-light dbm
+
+LIBS     := -I ../../baselib -I ../../http -I ../../server \
+	    ${addprefix -package ,${PACKAGE}}
 PACKAGE  := ${LWT_PREEMPTIVE_PACKAGE} \
 	    lwt.unix lwt_log     \
 	    tyxml.parser \
Index: ocsigenserver-2.9/src/extensions/ocsipersist-dbm/ocsipersist.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/ocsipersist-dbm/ocsipersist.ml
+++ ocsigenserver-2.9/src/extensions/ocsipersist-dbm/ocsipersist.ml
@@ -38,26 +38,25 @@ let socketname = "socket"
 (*****************************************************************************)
 (** Internal functions: storage directory *)
 
-open Simplexmlparser
 (** getting the directory from config file *)
 let rec parse_global_config (store, ocsidbm, delayloading as d) = function
   | [] -> d
-  | Element ("delayloading", [("val", ("true" | "1"))], []) :: ll ->
+  | Xml.Element ("delayloading", [("val", ("true" | "1"))], []) :: ll ->
     parse_global_config (store, ocsidbm, true) ll
 
-  | Element ("store", [("dir", s)], []) :: ll ->
+  | Xml.Element ("store", [("dir", s)], []) :: ll ->
     if store = None then
       parse_global_config ((Some s), ocsidbm, delayloading) ll
     else
       Ocsigen_extensions.badconfig "Ocsipersist: Duplicate <store> tag"
 
-  | Element ("ocsidbm", [("name", s)], []) :: ll ->
+  | Xml.Element ("ocsidbm", [("name", s)], []) :: ll ->
     if ocsidbm = None then
       parse_global_config (store, (Some s), delayloading) ll
     else
       Ocsigen_extensions.badconfig "Ocsipersist: Duplicate <ocsidbm> tag"
 
-  | (Element (s,_,_))::ll -> Ocsigen_extensions.badconfig "Bad tag %s" s
+  | (Xml.Element (s,_,_))::ll -> Ocsigen_extensions.badconfig "Bad tag %s" s
 
   | _ -> Ocsigen_extensions.badconfig
            "Unexpected content inside Ocsipersist config"
Index: ocsigenserver-2.9/src/extensions/ocsipersist-pgsql/Makefile
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/ocsipersist-pgsql/Makefile
+++ ocsigenserver-2.9/src/extensions/ocsipersist-pgsql/Makefile
@@ -1,6 +1,6 @@
 include ../../../Makefile.config
 
-PACKAGE  := tyxml.parser pgocaml lwt lwt_log
+PACKAGE  := xml-light pgocaml lwt lwt_log
 
 LIBS     := -I ../../baselib -I ../../http -I ../../server \
 	    ${addprefix -package ,${PACKAGE}}
Index: ocsigenserver-2.9/src/extensions/ocsipersist-pgsql/ocsipersist.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/ocsipersist-pgsql/ocsipersist.ml
+++ ocsigenserver-2.9/src/extensions/ocsipersist-pgsql/ocsipersist.ml
@@ -275,11 +275,9 @@ let fold_table = fold_step
 
 let iter_block a b = failwith "Ocsipersist.iter_block: not implemented"
 
-
-open Simplexmlparser
 let parse_global_config = function
   | [] -> ()
-  | [Element ("database", attrs, [])] -> let parse_attr = function
+  | [Xml.Element ("database", attrs, [])] -> let parse_attr = function
     | ("host", h) -> host := Some h
     | ("port", p) -> begin
         try port := Some (int_of_string p)
Index: ocsigenserver-2.9/src/extensions/ocsipersist-sqlite/Makefile
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/ocsipersist-sqlite/Makefile
+++ ocsigenserver-2.9/src/extensions/ocsipersist-sqlite/Makefile
@@ -1,8 +1,6 @@
 include ../../../Makefile.config
 
-PACKAGE  := lwt lwt_log \
-	    tyxml.parser \
-	    sqlite3      \
+PACKAGE  := lwt lwt_log xml-light sqlite3
 
 LIBS     := -I ../../baselib -I ../../http -I ../../server \
 	    ${addprefix -package ,${PACKAGE}}
Index: ocsigenserver-2.9/src/extensions/ocsipersist-sqlite/ocsipersist.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/ocsipersist-sqlite/ocsipersist.ml
+++ ocsigenserver-2.9/src/extensions/ocsipersist-sqlite/ocsipersist.ml
@@ -36,11 +36,10 @@ exception Ocsipersist_error
 
 (*****************************************************************************)
 
-open Simplexmlparser
 (** getting the directory from config file *)
 let rec parse_global_config = function
   | [] -> None
-  | (Element ("database", [("file", s)], []))::[] -> Some s
+  | (Xml.Element ("database", [("file", s)], []))::[] -> Some s
   | _ -> raise (Ocsigen_extensions.Error_in_config_file
                   ("Unexpected content inside Ocsipersist config"))
 
Index: ocsigenserver-2.9/src/extensions/revproxy.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/revproxy.ml
+++ ocsigenserver-2.9/src/extensions/revproxy.ml
@@ -42,7 +42,6 @@ open Ocsigen_lib
 
 open Lwt
 open Ocsigen_extensions
-open Simplexmlparser
 
 let section = Lwt_log.Section.make "ocsigen:ext:revproxy"
 
Index: ocsigenserver-2.9/src/extensions/rewritemod.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/rewritemod.ml
+++ ocsigenserver-2.9/src/extensions/rewritemod.ml
@@ -44,7 +44,6 @@
 
 open Lwt
 open Ocsigen_extensions
-open Simplexmlparser
 
 let section = Lwt_log.Section.make "ocsigen:ext:rewritemod"
 
Index: ocsigenserver-2.9/src/extensions/userconf.ml
===================================================================
--- ocsigenserver-2.9.orig/src/extensions/userconf.ml
+++ ocsigenserver-2.9/src/extensions/userconf.ml
@@ -98,12 +98,15 @@ let subresult new_req user_parse_site co
 
 
 let conf_to_xml conf =
-  try Simplexmlparser.xmlparser_file conf
+  try [Xml.parse_file conf]
   with
   | Sys_error _ -> raise NoConfFile
-  | Simplexmlparser.Xml_parser_error s ->
-    raise (Ocsigen_extensions.Error_in_config_file s)
-
+  | Xml.Error (s, loc) ->
+    let begin_char, end_char = Xml.range loc and line = Xml.line loc in
+    raise (Ocsigen_extensions.Error_in_config_file
+             (Printf.sprintf "%s, line %d, characters %d-%d"
+                (Xml.error_msg s)
+                line begin_char end_char))
 
 let gen hostpattern sitepath (regexp, conf, url, prefix, localpath) = function
   | Req_found _ ->
Index: ocsigenserver-2.9/src/server/ocsigen_extensions.ml
===================================================================
--- ocsigenserver-2.9.orig/src/server/ocsigen_extensions.ml
+++ ocsigenserver-2.9/src/server/ocsigen_extensions.ml
@@ -291,13 +291,13 @@ and extension2 =
 type extension = request_state -> answer Lwt.t
 
 
-type parse_fun = Simplexmlparser.xml list -> extension2
+type parse_fun = Xml.xml list -> extension2
 
 
 type parse_host =
     Parse_host of
       (Url.path ->
-       parse_host -> parse_fun -> Simplexmlparser.xml -> extension)
+       parse_host -> parse_fun -> Xml.xml -> extension)
 
 let (hosts : (virtual_hosts * config_info * extension2) list ref) =
   ref []
@@ -357,7 +357,7 @@ let new_url_of_directory_request request
 
 (*****************************************************************************)
 (* To give parameters to extensions: *)
-let dynlinkconfig = ref ([] : Simplexmlparser.xml list)
+let dynlinkconfig = ref ([] : Xml.xml list)
 let set_config s = dynlinkconfig := s
 let get_config () = !dynlinkconfig
 
@@ -458,7 +458,7 @@ let rec default_parse_config
     prevpath
     (Parse_host parse_host)
     (parse_fun : parse_fun) = function
-  | Simplexmlparser.Element ("site", atts, l) ->
+  | Xml.Element ("site", atts, l) ->
     let rec parse_site_attrs (enc,dir) = function
       | [] -> (match dir with
           | None ->
@@ -550,7 +550,7 @@ let rec default_parse_config
             Lwt.return (Ext_found_continue_with' (r, ri))
         | Req_not_found (err, ri) ->
             Lwt.return (Ext_sub_result ext))
-  | Simplexmlparser.Element (tag,_,_) ->
+  | Xml.Element (tag,_,_) ->
     raise (Bad_config_tag_for_extension tag)
   | _ -> raise (Ocsigen_config.Config_file_error
                   ("Unexpected content inside <host>"))
@@ -613,7 +613,7 @@ type parse_config = virtual_hosts -> con
 and parse_config_user = userconf_info -> parse_config
 and parse_config_aux =
     Url.path -> parse_host ->
-    (parse_fun -> Simplexmlparser.xml ->
+    (parse_fun -> Xml.xml ->
      extension
     )
 
@@ -621,11 +621,11 @@ and parse_config_aux =
 
 let user_extension_void_fun_site : parse_config_user =
   fun _ _ _ _ _ _ -> function
-    | Simplexmlparser.Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
+    | Xml.Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
     | _ -> raise (Error_in_config_file "Unexpected data in config file")
 
 let extension_void_fun_site : parse_config = fun _ _ _ _ _ -> function
-  | Simplexmlparser.Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
+  | Xml.Element (t, _, _) -> raise (Bad_config_tag_for_extension t)
   | _ -> raise (Error_in_config_file "Unexpected data in config file")
 
 
@@ -748,7 +748,7 @@ module Configuration = struct
     elements : element list;
     attributes : attribute list;
     pcdata : (string -> unit) option;
-    other_elements : (string -> (string * string) list -> Simplexmlparser.xml list -> unit) option;
+    other_elements : (string -> (string * string) list -> Xml.xml list -> unit) option;
     other_attributes : (string -> string -> unit) option;
   }
   and element = string * element'
@@ -792,7 +792,7 @@ module Configuration = struct
   let check_element_occurrence ~in_tag elements = function
     | name, { obligatory = true } ->
       let corresponding_element = function
-        | Simplexmlparser.Element (name', _, _) -> name = name'
+        | Xml.Element (name', _, _) -> name = name'
         | _ -> false
       in
       if not (List.exists corresponding_element elements) then
@@ -815,12 +815,12 @@ module Configuration = struct
   let rec process_element ~in_tag ~elements:spec_elements
       ?pcdata:spec_pcdata ?other_elements:spec_other_elements =
     function
-    | Simplexmlparser.PCData str ->
+    | Xml.PCData str ->
       let spec_pcdata =
         Option.get (fun () -> ignore_blank_pcdata ~in_tag) spec_pcdata
       in
       spec_pcdata str
-    | Simplexmlparser.Element (name, attributes, elements) ->
+    | Xml.Element (name, attributes, elements) ->
       try
         let spec = List.assoc name spec_elements in
         List.iter
Index: ocsigenserver-2.9/src/server/ocsigen_extensions.mli
===================================================================
--- ocsigenserver-2.9.orig/src/server/ocsigen_extensions.mli
+++ ocsigenserver-2.9/src/server/ocsigen_extensions.mli
@@ -262,7 +262,7 @@ type extension = request_state -> answer
     the extension may want to modify the result (filters).
 *)
 
-type parse_fun = Simplexmlparser.xml list -> extension2
+type parse_fun = Xml.xml list -> extension2
 
 (** Type of the functions parsing the content of a <host> tag *)
 type parse_host
@@ -305,7 +305,7 @@ and parse_config_user =
   userconf_info -> parse_config
 and parse_config_aux =
     Url.path -> parse_host ->
-    (parse_fun -> Simplexmlparser.xml ->
+    (parse_fun -> Xml.xml ->
      extension
     )
 
@@ -355,7 +355,7 @@ val register_extension :
   ?user_fun_site:parse_config_user ->
   ?begin_init:(unit -> unit) ->
   ?end_init:(unit -> unit) ->
-  ?init_fun:(Simplexmlparser.xml list -> unit) ->
+  ?init_fun:(Xml.xml list -> unit) ->
   ?exn_handler:(exn -> string) ->
   ?respect_pipeline:bool ->
   unit -> unit
@@ -388,7 +388,7 @@ module Configuration : sig
     ?elements:element list ->
     ?attributes:attribute list ->
     ?pcdata:(string -> unit) ->
-    ?other_elements:(string -> (string * string) list -> Simplexmlparser.xml list -> unit) ->
+    ?other_elements:(string -> (string * string) list -> Xml.xml list -> unit) ->
     ?other_attributes:(string -> string -> unit) ->
     unit -> element
 
@@ -416,17 +416,17 @@ module Configuration : sig
     in_tag:string ->
     elements:element list ->
     ?pcdata:(string -> unit) ->
-    ?other_elements:(string -> (string * string) list -> Simplexmlparser.xml list -> unit) ->
-    Simplexmlparser.xml -> unit
+    ?other_elements:(string -> (string * string) list -> Xml.xml list -> unit) ->
+    Xml.xml -> unit
 
   (** Application of [process_element] on a list of XML elements. *)
   val process_elements :
     in_tag:string ->
     elements:element list ->
     ?pcdata:(string -> unit) ->
-    ?other_elements:(string -> (string * string) list -> Simplexmlparser.xml list -> unit) ->
+    ?other_elements:(string -> (string * string) list -> Xml.xml list -> unit) ->
     ?init:(unit -> unit) ->
-    Simplexmlparser.xml list -> unit
+    Xml.xml list -> unit
 
   (** The specification for ignoring blank PCDATA ('\n', '\r', ' ', '\t') and failing
       otherwise (a reasonable default). *)
@@ -524,7 +524,7 @@ val get_numberofreloads : unit -> int
 
 val get_init_exn_handler : unit -> exn -> string
 
-val set_config : Simplexmlparser.xml list -> unit
+val set_config : Xml.xml list -> unit
 
 val client_of_connection : Ocsigen_http_com.connection -> client
 
Index: ocsigenserver-2.9/src/server/ocsigen_parseconfig.ml
===================================================================
--- ocsigenserver-2.9.orig/src/server/ocsigen_parseconfig.ml
+++ ocsigenserver-2.9/src/server/ocsigen_parseconfig.ml
@@ -24,7 +24,7 @@
 open Ocsigen_lib
 open Ocsigen_socket
 
-open Simplexmlparser
+open Xml
 open Ocsigen_config
 
 let section = Lwt_log.Section.make "ocsigen:config"
@@ -184,10 +184,7 @@ let parse_string_tag tag s =
 
 
 let rec parser_config =
-  let rec verify_empty = function
-    | [] -> ()
-    | _ -> raise (Config_file_error "Don't know what to do with trailing data")
-  in let rec parse_servers n = function
+  let rec parse_servers n = function
     | [] -> (match n with
         | [] -> raise (Config_file_error ("<server> tag expected"))
         | _ -> n)
@@ -203,14 +200,13 @@ let rec parser_config =
         (* nouveau at the end *)
     | _ -> raise (Config_file_error ("syntax error inside <ocsigen>"))
   in function
-    | (Element ("ocsigen", [], l))::ll ->
-      verify_empty ll;
+    | (Element ("ocsigen", [], l)) ->
       parse_servers [] l
     | _ -> raise (Config_file_error "<ocsigen> tag expected")
 
 
 let parse_ext file =
-  parser_config (Simplexmlparser.xmlparser_file file)
+  parser_config (Xml.parse_file file)
 
 
 let preloadfile config () = Ocsigen_extensions.set_config config
@@ -785,6 +781,6 @@ let parse_config ?file () =
     | None -> Ocsigen_config.get_config_file ()
     | Some f -> f
   in
-  parser_config (Simplexmlparser.xmlparser_file file)
+  parser_config (Xml.parse_file file)
 
 (******************************************************************)
Index: ocsigenserver-2.9/src/server/ocsigen_parseconfig.mli
===================================================================
--- ocsigenserver-2.9.orig/src/server/ocsigen_parseconfig.mli
+++ ocsigenserver-2.9/src/server/ocsigen_parseconfig.mli
@@ -36,13 +36,13 @@ val parse_size_tag : string -> string ->
 (** Parse a string (PCDATA) as XML content.
     Raises [Failure "Ocsigen_parseconfig.parse_string"] in case of error.
 *)
-val parse_string : Simplexmlparser.xml list -> string
+val parse_string : Xml.xml list -> string
 
 (** [parse_string_tag tag s] parses a string (same syntax as [parse_string]).
     In case of error, raises [Ocsigen_config.Config_file_error m] where [m]
     is an error message explaining that a string was expected in tag [<tag>].
 *)
-val parse_string_tag : string -> Simplexmlparser.xml list -> string
+val parse_string_tag : string -> Xml.xml list -> string
 
 
 (** Parses the [hostfilter] field of the configuration file, which
@@ -52,9 +52,8 @@ val parse_host_field: string option -> O
 
 (**/**)
 
-val parser_config : Simplexmlparser.xml list ->
-  Simplexmlparser.xml list list
-val parse_server : bool -> Simplexmlparser.xml list -> unit
+val parser_config : Xml.xml -> Xml.xml list list
+val parse_server : bool -> Xml.xml list -> unit
 
 type ssl_info = {
   ssl_certificate : string option;
@@ -76,7 +75,7 @@ type ssl_info = {
     }
 *)
 val extract_info :
-  Simplexmlparser.xml list ->
+  Xml.xml list ->
   (string option * string option) *
   (ssl_info option *
    (Ocsigen_socket.socket_type * int) list *
@@ -86,4 +85,4 @@ val extract_info :
 val parse_config :
   ?file:string ->
   unit ->
-  Simplexmlparser.xml list list
+  Xml.xml list list
Index: ocsigenserver-2.9/src/server/ocsigen_server.ml
===================================================================
--- ocsigenserver-2.9.orig/src/server/ocsigen_server.ml
+++ ocsigenserver-2.9/src/server/ocsigen_server.ml
@@ -1029,9 +1029,12 @@ let errmsg = function
   | Ocsigen_extensions.Error_in_config_file msg ->
     (("Fatal - Error in configuration file: "^msg),
      50)
-  | Simplexmlparser.Xml_parser_error s ->
-    (("Fatal - Error in configuration file: "^s),
-     51)
+  | Xml.Error (s, loc) ->
+    let begin_char, end_char = Xml.range loc and line = Xml.line loc in
+    raise (Ocsigen_extensions.Error_in_config_file
+             (Printf.sprintf "%s, line %d, characters %d-%d"
+                (Xml.error_msg s)
+                line begin_char end_char))
   | Ocsigen_loader.Dynlink_error (s, exn) ->
     (("Fatal - While loading "^s^": "^(Printexc.to_string exn)),
      52)
