Index: ppx_import-1.6.2/src/ppx_import.ml
===================================================================
--- ppx_import-1.6.2.orig/src/ppx_import.ml
+++ ppx_import-1.6.2/src/ppx_import.ml
@@ -70,7 +70,7 @@ let try_find_module ~loc:_ env lid =
      but better be safe and bundle them in the same try..with.
   *)
   try
-    let path = Env.lookup_module ~load:true lid env in
+    let (path,_) = Env.find_module_by_name lid env in
     let module_decl = Env.find_module path env in
     Some module_decl.md_type
   with Not_found -> None
@@ -362,7 +362,7 @@ let type_declaration ~tool_name mapper t
               (* In this case, we know for sure that the user intends this lident
                  as a type name, so we use Typetexp.find_type and let the failure
                  cases propagate to the user. *)
-              Typetexp.find_type env loc head_id |> snd
+              Env.lookup_type ~loc head_id env |> snd
             | Ldot (parent_id, elem) ->
               let sig_items = locate_sig ~loc env parent_id in
               get_type_decl ~loc sig_items parent_id elem
@@ -449,7 +449,7 @@ let module_type ~tool_name mapper modtyp
               (* In this case, we know for sure that the user intends this lident
                  as a module type name, so we use Typetexp.find_type and
                  let the failure cases propagate to the user. *)
-              Typetexp.find_modtype env loc head_id |> snd
+              Env.lookup_modtype ~loc head_id env |> snd
             | Longident.Ldot (parent_id, elem) ->
               let sig_items = locate_sig ~loc env parent_id in
               get_modtype_decl ~loc sig_items parent_id elem
