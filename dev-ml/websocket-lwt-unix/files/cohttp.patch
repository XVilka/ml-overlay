Index: ocaml-websocket-2.13/lwt/websocket_lwt_unix.ml
===================================================================
--- ocaml-websocket-2.13.orig/lwt/websocket_lwt_unix.ml
+++ ocaml-websocket-2.13/lwt/websocket_lwt_unix.ml
@@ -113,9 +113,8 @@ let write_failed_response oc =
 let establish_server
     ?read_buf ?write_buf
     ?timeout ?stop
-    ?on_exn
     ?(check_request=check_origin_with_host)
-    ?(ctx=Conduit_lwt_unix.default_ctx) ~mode react =
+    ?(ctx=Conduit_lwt_unix.default_ctx) ~on_exn ~mode react =
   let module C = Cohttp in
   let server_fun flow ic oc =
     (Request.read ic >>= function
@@ -154,7 +153,7 @@ let establish_server
       Connected_client.create ?read_buf ?write_buf request flow ic oc in
     react client
   in
-  Conduit_lwt_unix.serve ?on_exn ?timeout ?stop ~ctx ~mode begin fun flow ic oc ->
+  Conduit_lwt_unix.serve ?timeout ?stop ~on_exn ~ctx ~mode begin fun flow ic oc ->
     set_tcp_nodelay flow;
     server_fun (Conduit_lwt_unix.endp_of_flow flow) ic oc
   end
@@ -171,10 +170,10 @@ let mk_frame_stream recv =
 let establish_standard_server
     ?read_buf ?write_buf
     ?timeout ?stop
-    ?on_exn ?check_request ?(ctx=Conduit_lwt_unix.default_ctx) ~mode react =
+    ?check_request ?(ctx=Conduit_lwt_unix.default_ctx) ~on_exn ~mode react =
   let f client =
     react (Connected_client.make_standard client)
   in
   establish_server ?read_buf ?write_buf ?timeout ?stop
-    ?on_exn ?check_request ~ctx ~mode f
+    ?check_request ~on_exn ~ctx ~mode f
 
Index: ocaml-websocket-2.13/lwt/websocket_lwt_unix.mli
===================================================================
--- ocaml-websocket-2.13.orig/lwt/websocket_lwt_unix.mli
+++ ocaml-websocket-2.13/lwt/websocket_lwt_unix.mli
@@ -39,9 +39,9 @@ val establish_server :
   ?write_buf:Buffer.t ->
   ?timeout:int ->
   ?stop:unit Lwt.t ->
-  ?on_exn:(exn -> unit) ->
   ?check_request:(Cohttp.Request.t -> bool) ->
   ?ctx:Conduit_lwt_unix.ctx ->
+  on_exn:(exn -> unit) ->
   mode:Conduit_lwt_unix.server ->
   (Connected_client.t -> unit Lwt.t) ->
   unit Lwt.t
@@ -62,9 +62,9 @@ val establish_standard_server :
   ?write_buf:Buffer.t ->
   ?timeout:int ->
   ?stop:unit Lwt.t ->
-  ?on_exn:(exn -> unit) ->
   ?check_request:(Cohttp.Request.t -> bool) ->
   ?ctx:Conduit_lwt_unix.ctx ->
+  on_exn:(exn -> unit) ->
   mode:Conduit_lwt_unix.server ->
   (Connected_client.t -> unit Lwt.t) ->
   unit Lwt.t
Index: ocaml-websocket-2.13/lwt/wscat.ml
===================================================================
--- ocaml-websocket-2.13.orig/lwt/wscat.ml
+++ ocaml-websocket-2.13/lwt/wscat.ml
@@ -86,7 +86,7 @@ let server uri =
   endp_to_server ~ctx:default_ctx endp >>= fun server ->
   let server_str = server |> sexp_of_server |> Sexplib.Sexp.to_string_hum in
   Lwt_log.info_f ~section "server = %s" server_str >>= fun () ->
-  establish_server ~ctx:default_ctx ~mode:server echo_fun
+  establish_server ~on_exn:(fun _ -> ()) ~ctx:default_ctx ~mode:server echo_fun
 
 let main is_server uri =
   if !is_server then (ignore @@ server uri; fst @@ Lwt.wait ())
