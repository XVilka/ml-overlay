Index: parmap-1.0-rc10/bytearray.ml
===================================================================
--- parmap-1.0-rc10.orig/bytearray.ml
+++ parmap-1.0-rc10/bytearray.ml
@@ -61,7 +61,7 @@ let of_string s =
 
 let mmap_of_string fd s =
   let l = String.length s in
-  let ba = Bigarray.Array1.map_file fd Bigarray.char Bigarray.c_layout true l in
+  let ba = Bigarray.array1_of_genarray (Unix.map_file fd Bigarray.char Bigarray.c_layout true [|l|]) in
   unsafe_blit_from_string s 0 ba 0 l;
   ba
 (*
Index: parmap-1.0-rc10/parmap.ml
===================================================================
--- parmap-1.0-rc10.orig/parmap.ml
+++ parmap-1.0-rc10/parmap.ml
@@ -109,7 +109,7 @@ let redirect ?(path = (Printf.sprintf "/
 (* unmarshal from a mmap seen as a bigarray *)
 let unmarshal fd =
  let a =
-   Bigarray.Array1.map_file fd Bigarray.char Bigarray.c_layout true (-1) in
+   Bigarray.array1_of_genarray (Unix.map_file fd Bigarray.char Bigarray.c_layout true [|-1|]) in
  let res = Bytearray.unmarshal a 0 in
  Unix.close fd;
  res
@@ -624,7 +624,7 @@ let init_shared_buffer a =
   let size = Array.length a in
   let fd = Utils.tempfd() in
   let arr =
-    Bigarray.Array1.map_file fd Bigarray.float64 Bigarray.c_layout true size in
+    Bigarray.array1_of_genarray (Unix.map_file fd Bigarray.float64 Bigarray.c_layout true [|size|]) in
 
   (* The mmap() function shall add an extra reference to the file associated
      with the file descriptor fildes which is not removed by a subsequent
