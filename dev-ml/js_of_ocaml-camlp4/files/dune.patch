Index: js_of_ocaml-3.2.1/lib/lwt/graphics/jbuild
===================================================================
--- js_of_ocaml-3.2.1.orig/lib/lwt/graphics/jbuild
+++ js_of_ocaml-3.2.1/lib/lwt/graphics/jbuild
@@ -1,17 +1,3 @@
-(* -*- tuareg -*- *)
-#require "unix"
-let graphics_exists =
-  try
-    let ic = Unix.open_process_in "ocamlfind query -a-format -predicates byte graphics" in
-    let path = input_line ic in
-    close_in ic;
-    Sys.file_exists path
-  with _ -> false
-
-let () =
-  let jbuild =
-    if graphics_exists
-    then {|
 (library
  ((name graphics_js)
   (public_name js_of_ocaml-lwt.graphics)
@@ -19,10 +5,3 @@ let () =
   (optional)
   (libraries (js_of_ocaml js_of_ocaml-lwt lwt graphics))
   (preprocess (pps (js_of_ocaml-ppx)))))
-|}
-    else {||}
-  in
-  Printf.ksprintf Jbuild_plugin.V1.send {|
-(jbuild_version 1)
-%s
-|} jbuild
Index: js_of_ocaml-3.2.1/toplevel/lib/camlp4/jbuild
===================================================================
--- js_of_ocaml-3.2.1.orig/toplevel/lib/camlp4/jbuild
+++ js_of_ocaml-3.2.1/toplevel/lib/camlp4/jbuild
@@ -1,17 +1,3 @@
-(* -*- tuareg -*- *)
-#require "unix"
-let camlp4_exists =
-  try
-    let ic = Unix.open_process_in "ocamlfind query -a-format -predicates byte camlp4.lib" in
-    let path = input_line ic in
-    close_in ic;
-    Sys.file_exists path
-  with _ -> false
-
-let () =
-  let jbuild =
-    if camlp4_exists
-    then {|
 (library
  ((name js_of_ocaml_toplevel_camlp4)
   (public_name js_of_ocaml-toplevel.camlp4)
@@ -19,10 +5,3 @@ let () =
   (optional)
   (library_flags (-linkall))
   (preprocess (pps (js_of_ocaml-ppx)))))
-|}
-    else {||}
-  in
-  Printf.ksprintf Jbuild_plugin.V1.send {|
-(jbuild_version 1)
-%s
-|} jbuild
Index: js_of_ocaml-3.2.1/jbuild
===================================================================
--- js_of_ocaml-3.2.1.orig/jbuild
+++ js_of_ocaml-3.2.1/jbuild
@@ -1,23 +1,4 @@
-(* -*- tuareg -*- *)
-#require "unix"
-let git_version =
-  if not (try Sys.is_directory ".git" with _ -> false)
-  then ""
-  else
-    let ic = Unix.open_process_in "git log -n1 --pretty=format:%h" in
-    let version = input_line ic in
-    close_in ic;
-    version
-
-let version =
-  let ic = open_in "VERSION" in
-  let version = input_line ic in
-  close_in ic;
-  version
-
-let () = Printf.ksprintf Jbuild_plugin.V1.send {|
 (rule
  ((targets (version.ml.in))
   (action (with-stdout-to ${@}
-           (echo "let s = \"%s\"\nlet git_version = \"%s\"")))))
-|} version git_version
+           (echo "let s = \"%s\"\nlet git_version = \"3.2.1\"")))))
