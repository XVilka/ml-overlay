Index: ppx_deriving_yojson-3.5.1/src/ppx_deriving_yojson.cppo.ml
===================================================================
--- ppx_deriving_yojson-3.5.1.orig/src/ppx_deriving_yojson.cppo.ml
+++ ppx_deriving_yojson-3.5.1/src/ppx_deriving_yojson.cppo.ml
@@ -348,7 +348,7 @@ let ser_str_of_type ~options ~path ({ pt
       let ser = ser_expr_of_typ manifest in
       let lid = Ppx_deriving.mangle_lid (`PrefixSuffix ("M", "to_yojson")) lid in
       let orig_mod = Mod.ident (mknoloc lid) in
-      ([Str.module_ (Mb.mk (mknoloc mod_name) orig_mod)],
+      ([Str.module_ (Mb.mk (mknoloc (Some mod_name)) orig_mod)],
        [Vb.mk (pvar to_yojson_name)
               (polymorphize [%expr ([%e ser] : [%t typ] -> Yojson.Safe.t)])],
        [])
@@ -381,7 +381,7 @@ let ser_str_of_type ~options ~path ({ pt
       let flid = lid (Printf.sprintf "%s.f" mod_name) in
       let field = Exp.field (Exp.ident flid) (flid) in
       let mod_ =
-        Str.module_ (Mb.mk (mknoloc mod_name)
+        Str.module_ (Mb.mk (mknoloc (Some mod_name))
                     (Mod.structure [
           Str.type_ Nonrecursive [typ];
           Str.value Nonrecursive [record];
@@ -559,7 +559,7 @@ let desu_str_of_type ~options ~path ({ p
       let lid = Ppx_deriving.mangle_lid (`PrefixSuffix ("M", "of_yojson")) lid in
       let orig_mod = Mod.ident (mknoloc lid) in
       let poly_desu = polymorphize [%expr ([%e wrap_runtime desu] : Yojson.Safe.t -> _)] in
-      ([Str.module_ (Mb.mk (mknoloc mod_name) orig_mod)],
+      ([Str.module_ (Mb.mk (mknoloc (Some mod_name)) orig_mod)],
        [Vb.mk (pvar of_yojson_name) poly_desu],
        [])
     | Some _ ->
@@ -585,7 +585,7 @@ let desu_str_of_type ~options ~path ({ p
       let flid = lid (Printf.sprintf "%s.f" mod_name) in
       let field = Exp.field (Exp.ident flid) flid in
       let mod_ =
-        Str.module_ (Mb.mk (mknoloc mod_name)
+        Str.module_ (Mb.mk (mknoloc (Some mod_name))
                     (Mod.structure [
           Str.type_ Nonrecursive [typ];
           Str.value Nonrecursive [record];
@@ -721,7 +721,7 @@ let ser_sig_of_type ~options ~path type_
     in
     let record = Val.mk (mknoloc "f") (Typ.constr (lid "t_to_yojson") []) in
     let mod_ =
-      Sig.module_ (Md.mk (mknoloc mod_name)
+      Sig.module_ (Md.mk (mknoloc (Some mod_name))
                   (Mty.signature [
         Sig.type_ Nonrecursive [typ];
         Sig.value record;
@@ -763,7 +763,7 @@ let desu_sig_of_type ~options ~path type
     in
     let record = Val.mk (mknoloc "f") (Typ.constr (lid "t_of_yojson") []) in
     let mod_ =
-      Sig.module_ (Md.mk (mknoloc mod_name)
+      Sig.module_ (Md.mk (mknoloc (Some mod_name))
                   (Mty.signature [
         Sig.type_ Nonrecursive [typ];
         Sig.value record;
@@ -791,7 +791,7 @@ let yojson_str_fields ~options ~path:_ t
         fields [%expr []]
       in
         [
-          Str.module_ (Mb.mk (mknoloc (Ppx_deriving.mangle_type_decl (`Prefix "Yojson_meta") type_decl))
+          Str.module_ (Mb.mk (mknoloc (Some (Ppx_deriving.mangle_type_decl (`Prefix "Yojson_meta") type_decl)))
                       (Mod.structure [
             Str.value Nonrecursive [Vb.mk [%expr [%e pvar "keys"]] [%expr [%e flist]]]
           ; Str.value Nonrecursive [Vb.mk [%expr [%e pvar "_"]] [%expr [%e evar "keys"]]]
@@ -807,7 +807,7 @@ let yojson_sig_fields ~options ~path:_ t
     match kind, type_decl.ptype_manifest with
     | Ptype_record _, _ ->
       [
-        Sig.module_ (Md.mk (mknoloc (Ppx_deriving.mangle_type_decl (`Prefix "Yojson_meta") type_decl))
+        Sig.module_ (Md.mk (mknoloc (Some (Ppx_deriving.mangle_type_decl (`Prefix "Yojson_meta") type_decl)))
                     (Mty.signature [
           Sig.value (Val.mk (mknoloc "keys") [%type: string list]) ]))
       ]
