Index: ocaml-cohttp-2.4.0/cohttp-async/src/dune
===================================================================
--- ocaml-cohttp-2.4.0.orig/cohttp-async/src/dune
+++ ocaml-cohttp-2.4.0/cohttp-async/src/dune
@@ -2,6 +2,6 @@
   (name        cohttp_async)
   (synopsis    "Async backend")
   (public_name cohttp-async)
-  (libraries   logs.fmt base fmt async_unix async_kernel async_extra uri
+  (libraries   logs.fmt base fmt async_unix async_kernel uri
                uri.services uri-sexp ipaddr.unix conduit-async magic-mime cohttp)
   (preprocess (pps ppx_sexp_conv)))
Index: ocaml-cohttp-2.4.0/cohttp-async/src/server.ml
===================================================================
--- ocaml-cohttp-2.4.0.orig/cohttp-async/src/server.ml
+++ ocaml-cohttp-2.4.0/cohttp-async/src/server.ml
@@ -1,7 +1,6 @@
 open Base
 open Async_kernel
 open Async_unix
-open Async_extra
 
 module Request = struct
   include Cohttp.Request
Index: ocaml-cohttp-2.4.0/cohttp-async/src/server.mli
===================================================================
--- ocaml-cohttp-2.4.0.orig/cohttp-async/src/server.mli
+++ ocaml-cohttp-2.4.0/cohttp-async/src/server.mli
@@ -74,7 +74,7 @@ val create_expert :
   on_handler_error:[ `Call of 'address -> exn  -> unit
                    | `Ignore
                    | `Raise ] ->
-  ('address, 'listening_on) Async_extra.Tcp.Where_to_listen.t
+  ('address, 'listening_on) Async_unix.Tcp.Where_to_listen.t
   -> (body:Body.t -> 'address -> Request.t
       -> response_action Async_kernel.Deferred.t)
   -> ('address, 'listening_on) t Async_kernel.Deferred.t
@@ -89,6 +89,6 @@ val create :
   on_handler_error:[ `Call of 'address -> exn  -> unit
                    | `Ignore
                    | `Raise ] ->
-  ('address, 'listening_on) Async_extra.Tcp.Where_to_listen.t
+  ('address, 'listening_on) Async_unix.Tcp.Where_to_listen.t
   -> (body:Body.t -> 'address -> Request.t -> response Async_kernel.Deferred.t)
   -> ('address, 'listening_on) t Async_kernel.Deferred.t
